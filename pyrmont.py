"""
Rainmeter skin code generator
--> skin.pyrm
...
;#macro
for i in range(25):
    print(f'''
    [MeasureBand{i}]
        Measure=Plugin
        Plugin=AudioLevel
        Parent=MeasureAudio
        Type=Band
        BandIdx={i}
    ''')
...
;#endmacro
--> skin.ini
...
[MeasureBand0]
    Measure=Plugin
    Plugin=AudioLevel
    Parent=MeasureAudio
    Type=Band
    BandIdx=0
... (25 times as above)
"""

import sys
import textwrap
from pathlib import Path


def search_pyrms(directory):
    return [x for x in directory.rglob('*.pyrm')]


class Macro:
    def __init__(self, lines):
        self.code = """
__temp__pyrmont__ = []
def print(*args):
    global __temp__pyrmont__
    for arg in args:
        __temp__pyrmont__.append(arg)
""" + ''.join(lines) + """
pyrmont_macro_output = __temp__pyrmont__
"""


def process_pyrm(file: Path):
    with open(str(file)) as f:
        in_lines = f.readlines()

    out_lines = []
    gen_span_start = -1
    in_span = False
    for i, line in enumerate(in_lines):
        if line.lstrip(';').strip() == "#macro":
            if in_span:
                print('Macros cannot be nested.')
                return
            in_span = True
            gen_span_start = i
        elif in_span:
            if line.lstrip(';').strip() == "#endmacro":
                in_span = False
                out_lines.append(Macro(in_lines[gen_span_start + 1:i]))
        else:
            out_lines.append(line)

    out_file = file.with_suffix('.ini')
    with open(str(out_file), 'w+') as f:
        f.write("; This file was autogenerated with pyrmont.\n")
        f.write("; It's not recommended to edit this file manually.\n")
        for line in out_lines:
            if isinstance(line, Macro):
                result = {}
                exec(line.code, globals(), result)
                f.write(textwrap.dedent(''.join(result['pyrmont_macro_output'])))
                pass
            else:
                f.write(line)


if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("1-st argument should be a path to Rainmeter skin pack directory.")
        exit(1)
    skin_dir = Path(sys.argv[1])
    if not skin_dir.exists():
        print("Specified directory does not exists.")
        exit(1)
    print(skin_dir)
    pyrms = search_pyrms(skin_dir)
    print(pyrms)
    for pyrm in pyrms:
        process_pyrm(pyrm)
